package ui;

import service.LoginService;
import pojo.User;

public class PageLogin extends javax.swing.JFrame {

    /**
     * Creates new form PageLogin
     */
    public PageLogin() {
        initComponents();
    }
    
    private void performLogin() {
        String usernameOrEmailOrUserID = usernameField.getText().trim();
        String password = new String(passwordField.getPassword()).trim();

        // First validate empty fields
        if (usernameOrEmailOrUserID.isEmpty() && password.isEmpty()) {
            javax.swing.JOptionPane.showMessageDialog(this, "Both Username/UserID/Email and Password fields are empty.");
            return;
        }

        if (usernameOrEmailOrUserID.isEmpty()) {
            javax.swing.JOptionPane.showMessageDialog(this, "Username/UserID/Email field is empty.");
            return;
        }

        if (password.isEmpty()) {
            javax.swing.JOptionPane.showMessageDialog(this, "Password field is empty.");
            return;
        }

        // Now try login
        try {
            LoginService loginService = new LoginService();
            User user = loginService.login(usernameOrEmailOrUserID, password);

            if (user != null) {
                // Successful login
                int employeeID = loginService.getEmployeeIDByUserID(user.getUserID());

                // Welcome dialog â†’ refined
                String welcomeMessage = String.format("Welcome, %s %s!", 
                    user.getUserRole(), 
                    user.getUsername());
                javax.swing.JOptionPane.showMessageDialog(this, welcomeMessage);

                // Route to correct Home Page based on role
                switch (user.getUserRole()) {
                    case "Employee":
                        new PageEmployeeHome(user.getUserID(), employeeID).setVisible(true);
                        break;
                    case "Finance":
                        new PageFinanceHome(user.getUserID(), employeeID).setVisible(true);
                        break;
                    case "HR":
                        new PageHRHome(user.getUserID(), employeeID).setVisible(true);
                        break;
                    case "IT":
                        new PageITHome(user.getUserID(), employeeID).setVisible(true);
                        break;
                    case "Immediate Supervisor": // roleID = 5
                        new PageManagerHome(user.getUserID(), employeeID).setVisible(true);
                        break;
                    default:
                        javax.swing.JOptionPane.showMessageDialog(this, "Unknown role: " + user.getUserRole());
                        return;
                }

                // Close login page
                this.dispose();

            } else {
                // Check which input is wrong (advanced logic):

                boolean userExists = false;

                // Check if username/email/userID exists
                try {
                    userExists = loginService.doesUserExist(usernameOrEmailOrUserID);
                } catch (Exception e) {
                    e.printStackTrace();
                    javax.swing.JOptionPane.showMessageDialog(this, "Error checking user existence.");
                    return;
                }

                if (!userExists) {
                    javax.swing.JOptionPane.showMessageDialog(this, "Invalid Username/UserID/Email.");
                    clearFields(); // Clear fields and focus on username
                } else {
                    javax.swing.JOptionPane.showMessageDialog(this, "Incorrect password.");
                    clearFields(); // Clear fields and focus on username
                }
            }

        } catch (Exception e) {
            javax.swing.JOptionPane.showMessageDialog(this, "Error during login: " + e.getMessage());
            e.printStackTrace();
        }
    }

    // Helper method to clear username and password fields
    private void clearFields() {
        usernameField.setText("");
        passwordField.setText("");
        usernameField.requestFocus();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        loginButton = new util.BlueButton();
        passwordField = new javax.swing.JPasswordField();
        usernameField = new javax.swing.JTextField();
        background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("MotorPH Payroll System");
        setMaximumSize(new java.awt.Dimension(1040, 590));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        loginButton.setForeground(new java.awt.Color(0, 102, 102));
        loginButton.setText("Login");
        loginButton.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        loginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginButtonActionPerformed(evt);
            }
        });
        getContentPane().add(loginButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 390, 160, 40));

        passwordField.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        passwordField.setForeground(new java.awt.Color(0, 102, 102));
        passwordField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordFieldActionPerformed(evt);
            }
        });
        getContentPane().add(passwordField, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 322, 280, 40));

        usernameField.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        usernameField.setForeground(new java.awt.Color(0, 102, 102));
        usernameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usernameFieldActionPerformed(evt);
            }
        });
        getContentPane().add(usernameField, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 220, 280, 40));

        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/background/Login.png"))); // NOI18N
        getContentPane().add(background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void usernameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usernameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_usernameFieldActionPerformed

    private void loginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginButtonActionPerformed
        performLogin();
    }//GEN-LAST:event_loginButtonActionPerformed

    private void passwordFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_passwordFieldActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PageLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PageLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PageLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PageLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PageLogin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel background;
    private util.BlueButton loginButton;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JTextField usernameField;
    // End of variables declaration//GEN-END:variables
}
